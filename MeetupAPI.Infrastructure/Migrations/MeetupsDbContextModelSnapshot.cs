// <auto-generated />
using System;
using MeetupAPI.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeetupAPI.Infrastructure.Migrations
{
    [DbContext(typeof(MeetupsDbContext))]
    partial class MeetupsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MeetupAPI.Domain.Entities.Meetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Creator");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Description");

                    b.Property<string>("MeetupPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MeetupPlace");

                    b.Property<DateTimeOffset>("MeetupTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("MeetupTime");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Plan");

                    b.Property<string>("Speaker")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Speaker");

                    b.HasKey("Id");

                    b.ToTable("Meetups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Creator = "Alex Inkin",
                            Description = "We will talk about Angular!",
                            MeetupPlace = "medium.com",
                            MeetupTime = new DateTimeOffset(new DateTime(2022, 6, 23, 12, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Angular Developement",
                            Plan = "1. Angular 2. DI",
                            Speaker = "Alex Inkin"
                        });
                });

            modelBuilder.Entity("MeetupAPI.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Login");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("char(60)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            PasswordHash = "$2a$11$ryrrT9gOJR0ySA5NsIlZJOUNcBSFpQQGEYWL5rlOpNKkipsWpvyea",
                            Role = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
